// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhoneNumberArea.API.Data;

#nullable disable

namespace PhoneNumberArea.API.Migrations
{
    [DbContext(typeof(PhoneNumberAreaDbContext))]
    [Migration("20220917204309_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PhoneNumberArea.API.Data.AreaCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("AreaCodes");
                });

            modelBuilder.Entity("PhoneNumberArea.API.Data.County", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AreaCodeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaCodeId");

                    b.ToTable("Counties");
                });

            modelBuilder.Entity("PhoneNumberArea.API.Data.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("PhoneNumberArea.API.Data.AreaCode", b =>
                {
                    b.HasOne("PhoneNumberArea.API.Data.State", "State")
                        .WithMany("AreaCodes")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("PhoneNumberArea.API.Data.County", b =>
                {
                    b.HasOne("PhoneNumberArea.API.Data.AreaCode", "AreaCode")
                        .WithMany("Counties")
                        .HasForeignKey("AreaCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaCode");
                });

            modelBuilder.Entity("PhoneNumberArea.API.Data.AreaCode", b =>
                {
                    b.Navigation("Counties");
                });

            modelBuilder.Entity("PhoneNumberArea.API.Data.State", b =>
                {
                    b.Navigation("AreaCodes");
                });
#pragma warning restore 612, 618
        }
    }
}
